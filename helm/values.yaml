namespace: rebugit

rebugit:
  registry: public.ecr.aws
  repository: g0o0x0q6

authentication:
  image:
    version: "1624772760"
  admin:
    password: admin
    user: admin
  resources:
    requests: { }
    limits: { }

database:
  image:
    version: "1625059180"
  migration:
    version: "1625104328"
  admin:
    password: postgres
  user:
    password: p4zzW0rd
  resources:
    requests: { }
    limits: { }

dashboard:
  keycloakUrl: http://localhost/rebugit/keycloak
  authenticationMode: keycloak
  tracerApiUrl: http://localhost:8080
  port: 3000
  image:
    version: "1624839720"
  resources:
    requests: { }
    limits: { }

tracer:
  replicaCount: 1
  port: 8080
  resources:
    requests: { }
    limits: { }
  image:
    version: "1624839720"
    repository: public.ecr.aws/g0o0x0q6/tracer
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

keycloak:
  replicaCount: 1
  image:
    registry: public.ecr.aws
    repository: g0o0x0q6/keycloak
    tag: "1624772760"
    pullPolicy: Always
  auth:
    adminPassword: admin
    adminUser: admin
    createAdminUser: true
  service:
    type: ClusterIP
    port: 8080
  extraEnvVars:
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
  readinessProbe:
    enabled: false
    httpGet:
      path: /rebugit/keycloak/auth/realms/master
    initialDelaySeconds: 30
    timeoutSeconds: 30
  livenessProbe:
    enabled: false
    httpGet:
      path: /rebugit/keycloak/auth/realms/master
    initialDelaySeconds: 30
    timeoutSeconds: 30
  ingress:
    hostname:
    enabled: true
    pathType: Prefix
    path: /rebugit/keycloak
    servicePort: 8080
  externalDatabase:
    port: 5432
    database: keycloak
    host: rebugit-postgresql
    password: postgres
    user: postgres
  postgresql:
    enabled: false

postgresql:
  postgresqlPassword: postgres
  image:
    debug: true
    registry: public.ecr.aws
    repository: g0o0x0q6/postgres
    tag: "1625059180"
    pullPolicy: Always